#!/usr/bin/env ruby

require 'rubygems'
require 'yaml'
gem 'rails', '<3'
require 'active_record'
require 'action_mailer'
require 'fileutils'
require 'daemon_spawn'

class Dcc < DaemonSpawn::Base
  def start(args)
    File.umask(0022)
    config = YAML::load(File.read('config/worker.yml')).symbolize_keys
    ActiveRecord::Base.establish_connection(
        YAML::load(File.read('config/database.yml'))[config[:environment]])

    require 'lazy_attributes'
    require 'lib/dcc_worker'

    ActionMailer::Base.delivery_method = :sendmail

    ActiveRecord::Base.time_zone_aware_attributes = true
    ActiveRecord::Base.default_timezone = :utc
    Time.zone_default = Time.send(:get_zone, 'UTC')

    # http://zerolith.com/mysql-server-has-gone-away-activerecord.html
    Thread.new {
      loop {
        sleep 30.minutes
        ActiveRecord::Base.verify_active_connections!
      }
    }.priority = -10

    DCCWorker.new(config[:group_name], config[:memcache_servers], config).run
  end

  def stop
  end
end

working_dir = log_dir = pid_file = nil
FileUtils.chdir("#{File.dirname(__FILE__)}/..") do
  working_dir = FileUtils.pwd
  FileUtils.mkdir_p(log_dir = "#{working_dir}/log")
  FileUtils.mkdir_p(tmp_dir = "#{working_dir}/tmp")
  pid_file = "#{tmp_dir}/worker.pid"
  if File.exists?(pid_file) && !system("kill -0 #{File.read pid_file} > /dev/null 2>&1")
    puts "removing orphaned pid file"
    FileUtils.rm_f pid_file
  end
end
Dcc.spawn!(:log_file => "#{log_dir}/worker.log",
    :pid_file => pid_file,
    :working_dir => working_dir,
    :sync_log => true)
